buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id "java"
	id "org.springframework.boot" version "2.7.11-SNAPSHOT"
	id "io.spring.dependency-management" version "1.0.15.RELEASE"
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl plugin
//	id 'org.mapstruct.ap.gradle.plugin' version '1.4.2.Final'
}

group = "com.recruit"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/snapshot" }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // Querydsl JPA 모듈
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" // Q 클래스 생성

	implementation "org.springframework.boot:spring-boot-starter-validation" // 유효성 검사
	implementation "org.springframework.security:spring-security-crypto:5.7.8" // 암호화
	implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3" // 복호화
	implementation "org.springdoc:springdoc-openapi-ui:1.6.9" // swagger
	implementation "org.reflections:reflections:0.9.12" // reflections

	implementation "org.mapstruct:mapstruct:1.5.1.Final" // mapstruct
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.1.Final" // mapstruct
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0" // lombok mapstruct error
	compileOnly "org.projectlombok:lombok"
	runtimeOnly "com.mysql:mysql-connector-j"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	annotationProcessor "org.projectlombok:lombok"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
}

def querydslDir = "$buildDir/generated/querydsl"

//mapstruct {
//	componentModel = "jsr330"
//	generatedSourcesDirectory = "$buildDir/generated/annotations"
//}

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

tasks.withType(JavaCompile){
	options.annotationProcessorGeneratedSourcesDirectory(file(querydslDir))
}

//clean{
//	delete file('src/main/generated')
//}

tasks.named("test") {
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", project.getProperties().get("jasypt.encryptor.password")
}
